kubectl commands

kubectl get <resource> pods service deployment namespace etc. (-o wide)
kubectl describe <resource> <resource ID>
kubectl apply -f /filename.yaml
kubectl delete -f /filename.yaml
kubectl get <resource> <resource ID> -o yaml
kubectl edit <resource> <resourceID>
kubectl config set-context --current --namespace=my-namespace
kubectl expose deployment (deployment ID) --port=<port>

port-forward:
kubectl port-forward <pod> <port(client side)>:<port(pod port)>

terraform:.
kubectl config view



installation: (Ubuntu)
1. sudo apt-get update
2. sudo apt-get install docker.io
3. sudo apt-get install curl 
4. curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
5. sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
6. sudo apt-get install kubeadm kubelet kubectl 
7. sudo apt-mark hold kubeadm kubelet kubectl
8. swapoff -a
9. sudo hostnamectl set-hostname <master/worker> (rename hostname)
10. sudo kubeadm init --pod-network-cidr=10.244.0.0/16
11. kubernetes-master:~$ mkdir -p $HOME/.kube
12. kubernetes-master:~$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
13. kubernetes-master:~$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
14. sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
15. kubectl get pods --all-namespaces

join workernode:
kubeadm join 172.19.235.11:6443 --token <token> \
        --discovery-token-ca-cert-hash sha256:<discovery-token>

get token:
kubeadm token list

get discovery token:
openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'

kubectl label node <node> node-role.kubernetes.io/worker=worker

____

remote access:
~/.kube/config - kubectl config location
cp /etc/kubernetes/admin.conf ~/.kube/config


troubleshoot:
1. kubelet cgroup driver: “systemd” is different from docker cgroup driver: “cgroupfs
touch /etc/default/kubelet
echo KUBELET_EXTRA_ARGS="--cgroup-driver=cgroupfs" >> kubelet
systemctl restart kubelet

2. "CNI failed to retrieve network namespace path"

mkdir -p /etc/cni/net.d
cd /etc/cni/net.d
chmod -R +r /etc/cni/net.d/
touch 10-flannel.conflist
vi 10-flannel.conflist
Content:
{
"name": "cbr0",
"plugins": [
{
"type": "flannel",
"delegate": {
"hairpinMode": true,
"isDefaultGateway": true
}
},
{
"type": "portmap",
"capabilities": {
"portMappings": true
}
}
]
}
end:

3. Cannot Connect to Cluster()

export KUBECONFIG=/etc/kubernetes/admin.conf
cp /etc/kubernetes/admin.conf $HOME/
chown $(id -u):$(id -g) $HOME/admin.conf
export KUBECONFIG=$HOME/admin.conf

